{"ast":null,"code":"import _objectSpread from \"/Users/chelseagilmore/Desktop/frontend/chef-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/chelseagilmore/Desktop/frontend/chef-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chelseagilmore/Desktop/frontend/chef-portfolio/src/components/AddRecipe.js\";\n// Add a form to add a new recipe\nimport React, { useState, useContext } from \"react\";\nimport { axiosAuth } from \"/utils/axiosWithAuth\";\nimport styled from \"styled-components\";\nimport { Context } from \"../utils\";\nconst Wrap = styled.div`\n  overflow: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  background: #d85505;\n  padding: 5px;\n  border-radius: 15px;\n`;\nconst InputBox = styled.input`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n`;\nconst InputArea = styled.textarea`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n  height: 80px;\n  width: 100%;\n`;\nconst MainForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 1em;\n  background: #f2e2ce;\n  border-radius: 3px;\n  background: #3f043c;\n  width: 250px;\n  height: 400px;\n  overflow: auto;\n  box-sizing: border-box;\n  border-radius: 15px;\n  margin-right: 50px;\n  margin-top: 50px;\n  span {\n    color: white;\n  }\n`;\nconst IngredFormSet = styled.fieldset`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  margin: 1em 0;\n`;\nconst BtnClick = styled.button`\n  width: 14em;\n  height: 3em;\n  margin: auto;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  background: white;\n  color: #d85505;\n`;\nconst Space = styled.p`\n  margin: 0.8em;\n  padding: 0;\n`;\nconst ListItems = styled.span`\n  padding-right: 5px;\n`;\n\nconst AddRecipe = props => {\n  const state = useContext(Context);\n\n  const _useState = useState({\n    id: \"\",\n    recipe_name: \"\",\n    source: \"\",\n    // ingredients: [{ id: \"\", ingredient: \"\", quantity: \"\", unit: \"\" }],\n    categories: [],\n    ingredients: [],\n    recipe_instructions: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        addRecipe = _useState2[0],\n        setAddRecipe = _useState2[1]; //these states are held seperately so they can be put into the arrays\n\n\n  const _useState3 = useState({\n    ingredients: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        ingredients = _useState4[0],\n        setIngredients = _useState4[1];\n\n  const _useState5 = useState({\n    tags: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tags = _useState6[0],\n        setTags = _useState6[1]; //handles state changes for the newRecipe object\n\n\n  const handleChange = e => {\n    e.preventDefault();\n    setAddRecipe(_objectSpread({}, newRecipe, {\n      [e.target.name]: e.target.value\n    }));\n  }; //handles state changes for the ingredients and tags arrays before adding them to the newRecipe Object\n\n\n  const handleIngredient = e => {\n    e.preventDefault();\n    setIngredients(_objectSpread({}, ingredients, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleTags = e => {\n    e.preventDefault();\n    setTags(_objectSpread({}, tags, {\n      [e.target.name]: e.target.value\n    }));\n  }; //adds addRecipe to the reducer and will eventually make an api call\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (document.getElementById(\"recipe_name\").value != \"\") {\n      setAddRecipe({\n        id: Date.now()\n      }); // axiosAuth()\n      //   .post(\"/recipe\", newRecipe)\n      //   .then(res => console.log(res.data));\n\n      addRecipe.time = Date.now();\n      state.dispatch({\n        type: \"ADD\",\n        payload: [newRecipe]\n      });\n      setAddRecipe({\n        id: \"\",\n        recipe_name: \"\",\n        source: \"\",\n        // ingredients: [{ id: \"\", ingredient: \"\", quantity: \"\", unit: \"\" }],\n        categories: [],\n        ingredients: [],\n        recipe_instructions: \"\"\n      });\n    }\n  }; //adds ingredients to the addRecipe ingredients array\n\n\n  const Ingredient = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (ingredients.ingredients != \"\") {\n      setAddRecipe(_objectSpread({}, addrecipe, {\n        ingredients: [...addrecipe.ingredients, ingredients.ingredients]\n      }));\n      setIngredients({\n        ingredients: \"\"\n      });\n      document.getElementById(\"ingredientinput\").value = \"\";\n    }\n  }; //adds tags to the addRecipe categories array\n\n\n  const Tag = e => {\n    if (tags.tags != \"\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setAddRecipe(_objectSpread({}, addRecipe, {\n        categories: [...newRecipe.categories, tags.tags]\n      }));\n      setTags({\n        tags: \"\"\n      });\n      document.getElementById(\"taginput\").value = \"\";\n    }\n  };\n\n  return React.createElement(MainForm, {\n    id: \"form\",\n    onSubmit: onSubmit,\n    className: \"no-scroll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(InputBox, {\n    id: \"recipe_name\",\n    type: \"text\",\n    name: \"recipe_name\",\n    value: newRecipe.recipe_name,\n    placeholder: \"Title:\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(InputBox, {\n    type: \"text\",\n    name: \"source\",\n    value: newRecipe.source,\n    placeholder: \"Author:\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), addRecipe.ingredients.map((item, index) => React.createElement(ListItems, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, item, \",\")), React.createElement(IngredFormSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(InputBox, {\n    id: \"ingredientinput\",\n    type: \"text\",\n    name: \"ingredients\",\n    value: ingredients.ingredients,\n    placeholder: \"ingredient:\",\n    onChange: handleIngredient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(BtnClick, {\n    type: \"button\",\n    onClick: Ingredient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Add Ingredient!\")), React.createElement(InputArea, {\n    id: \"recipe_instructions\",\n    type: \"textarea\",\n    name: \"recipe_instructions\",\n    value: addRecipe.recipe_instructions,\n    placeholder: \"Instructions:\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), addRecipe.categories.map((item, index) => React.createElement(ListItems, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, item, \",\")), React.createElement(IngredFormSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(InputBox, {\n    id: \"taginput\",\n    type: \"text\",\n    name: \"tags\",\n    value: tags.tags,\n    placeholder: \"Tag:\",\n    onChange: handleTags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }), React.createElement(BtnClick, {\n    type: \"button\",\n    onClick: Tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Add Tag!\")), React.createElement(BtnClick, {\n    id: \"submitbutton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Add Recipe!\"));\n};\n\nexport default AddRecipe;","map":{"version":3,"sources":["/Users/chelseagilmore/Desktop/frontend/chef-portfolio/src/components/AddRecipe.js"],"names":["React","useState","useContext","axiosAuth","styled","Context","Wrap","div","InputBox","input","InputArea","textarea","MainForm","form","IngredFormSet","fieldset","BtnClick","button","Space","p","ListItems","span","AddRecipe","props","state","id","recipe_name","source","categories","ingredients","recipe_instructions","addRecipe","setAddRecipe","setIngredients","tags","setTags","handleChange","e","preventDefault","newRecipe","target","name","value","handleIngredient","handleTags","onSubmit","document","getElementById","Date","now","time","dispatch","type","payload","Ingredient","stopPropagation","addrecipe","Tag","map","item","index"],"mappings":"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","sourcesContent":["// Add a form to add a new recipe\nimport React, { useState, useContext } from \"react\";\nimport { axiosAuth } from \"/utils/axiosWithAuth\";\nimport styled from \"styled-components\";\nimport { Context } from \"../utils\";\n\nconst Wrap = styled.div`\n  overflow: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  background: #d85505;\n  padding: 5px;\n  border-radius: 15px;\n`;\n\nconst InputBox = styled.input`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n`;\nconst InputArea = styled.textarea`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n  height: 80px;\n  width: 100%;\n`;\nconst MainForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 1em;\n  background: #f2e2ce;\n  border-radius: 3px;\n  background: #3f043c;\n  width: 250px;\n  height: 400px;\n  overflow: auto;\n  box-sizing: border-box;\n  border-radius: 15px;\n  margin-right: 50px;\n  margin-top: 50px;\n  span {\n    color: white;\n  }\n`;\nconst IngredFormSet = styled.fieldset`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  margin: 1em 0;\n`;\nconst BtnClick = styled.button`\n  width: 14em;\n  height: 3em;\n  margin: auto;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  background: white;\n  color: #d85505;\n`;\nconst Space = styled.p`\n  margin: 0.8em;\n  padding: 0;\n`;\nconst ListItems = styled.span`\n  padding-right: 5px;\n`;\n\nconst AddRecipe = props => {\n  const state = useContext(Context);\n  const [addRecipe, setAddRecipe] = useState({\n    id: \"\",\n    recipe_name: \"\",\n    source: \"\",\n    // ingredients: [{ id: \"\", ingredient: \"\", quantity: \"\", unit: \"\" }],\n    categories: [],\n    ingredients: [],\n    recipe_instructions: \"\"\n  });\n  //these states are held seperately so they can be put into the arrays\n  const [ingredients, setIngredients] = useState({\n    ingredients: \"\"\n  });\n  const [tags, setTags] = useState({\n    tags: \"\"\n  });\n  //handles state changes for the newRecipe object\n  const handleChange = e => {\n    e.preventDefault();\n    setAddRecipe({ ...newRecipe, [e.target.name]: e.target.value });\n  };\n  //handles state changes for the ingredients and tags arrays before adding them to the newRecipe Object\n  const handleIngredient = e => {\n    e.preventDefault();\n    setIngredients({\n      ...ingredients,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleTags = e => {\n    e.preventDefault();\n    setTags({ ...tags, [e.target.name]: e.target.value });\n  };\n  //adds addRecipe to the reducer and will eventually make an api call\n  const onSubmit = e => {\n    e.preventDefault();\n    if (document.getElementById(\"recipe_name\").value != \"\") {\n      setAddRecipe({ id: Date.now() });\n      // axiosAuth()\n      //   .post(\"/recipe\", newRecipe)\n      //   .then(res => console.log(res.data));\n      addRecipe.time = Date.now();\n      state.dispatch({\n        type: \"ADD\",\n        payload: [newRecipe]\n      });\n      setAddRecipe({\n        id: \"\",\n        recipe_name: \"\",\n        source: \"\",\n        // ingredients: [{ id: \"\", ingredient: \"\", quantity: \"\", unit: \"\" }],\n        categories: [],\n        ingredients: [],\n        recipe_instructions: \"\"\n      });\n    }\n  };\n  //adds ingredients to the addRecipe ingredients array\n  const Ingredient = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (ingredients.ingredients != \"\") {\n      setAddRecipe({\n        ...addrecipe,\n        ingredients: [...addrecipe.ingredients, ingredients.ingredients]\n      });\n      setIngredients({ ingredients: \"\" });\n      document.getElementById(\"ingredientinput\").value = \"\";\n    }\n  };\n  //adds tags to the addRecipe categories array\n  const Tag = e => {\n    if (tags.tags != \"\") {\n      e.preventDefault();\n      e.stopPropagation();\n      setAddRecipe({\n        ...addRecipe,\n        categories: [...newRecipe.categories, tags.tags]\n      });\n      setTags({ tags: \"\" });\n      document.getElementById(\"taginput\").value = \"\";\n    }\n  };\n\n  return (\n    <MainForm id=\"form\" onSubmit={onSubmit} className=\"no-scroll\">\n      <InputBox\n        id=\"recipe_name\"\n        type=\"text\"\n        name=\"recipe_name\"\n        value={newRecipe.recipe_name}\n        placeholder=\"Title:\"\n        onChange={handleChange}\n        required\n      />\n      <InputBox\n        type=\"text\"\n        name=\"source\"\n        value={newRecipe.source}\n        placeholder=\"Author:\"\n        onChange={handleChange}\n\n      />\n      {addRecipe.ingredients.map((item, index) => (\n        <ListItems key={index}>{item},</ListItems>\n      ))}\n      <IngredFormSet>\n        <InputBox\n          id=\"ingredientinput\"\n          type=\"text\"\n          name=\"ingredients\"\n          value={ingredients.ingredients}\n          placeholder=\"ingredient:\"\n          onChange={handleIngredient}\n\n        />\n        <BtnClick type=\"button\" onClick={Ingredient}>\n          Add Ingredient!\n        </BtnClick>\n      </IngredFormSet>\n\n      <InputArea\n        id=\"recipe_instructions\"\n        type=\"textarea\"\n        name=\"recipe_instructions\"\n        value={addRecipe.recipe_instructions}\n        placeholder=\"Instructions:\"\n        onChange={handleChange}\n      />\n      {addRecipe.categories.map((item, index) => (\n        <ListItems key={index}>{item},</ListItems>\n      ))}\n      <IngredFormSet>\n        <InputBox\n          id=\"taginput\"\n          type=\"text\"\n          name=\"tags\"\n          value={tags.tags}\n          placeholder=\"Tag:\"\n          onChange={handleTags}\n        />\n        <BtnClick type=\"button\" onClick={Tag}>\n          Add Tag!\n        </BtnClick>\n      </IngredFormSet>\n\n      <BtnClick id=\"submitbutton\">Add Recipe!</BtnClick>\n    </MainForm>\n  );\n};\n\nexport default AddRecipe;"]},"metadata":{},"sourceType":"module"}