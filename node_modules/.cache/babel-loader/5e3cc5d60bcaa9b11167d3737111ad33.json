{"ast":null,"code":"import _objectSpread from \"/Users/chelseagilmore/Desktop/frontend/chef-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/chelseagilmore/Desktop/frontend/chef-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chelseagilmore/Desktop/frontend/chef-portfolio/src/components/AddRecipe.js\";\n// Add a form to add a new recipe\nimport React, { useState, useContext } from \"react\";\nimport { axiosAuth } from \"/utils/axiosWithAuth\";\nimport styled from \"styled-components\"; // import { Context } from \"../utils\";\n\nconst Wrap = styled.div`\n  overflow: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  background: #d85505;\n  padding: 5px;\n  border-radius: 15px;\n`;\nconst InputBox = styled.input`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n`;\nconst InputArea = styled.textarea`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n  height: 80px;\n  width: 100%;\n`;\nconst MainForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 1em;\n  background: #f2e2ce;\n  border-radius: 3px;\n  background: #3f043c;\n  width: 250px;\n  height: 400px;\n  overflow: auto;\n  box-sizing: border-box;\n  border-radius: 15px;\n  margin-right: 50px;\n  margin-top: 50px;\n  span {\n    color: white;\n  }\n`;\nconst IngredFormSet = styled.fieldset`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  margin: 1em 0;\n`;\nconst BtnClick = styled.button`\n  width: 14em;\n  height: 3em;\n  margin: auto;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  background: white;\n  color: #d85505;\n`;\nconst Space = styled.p`\n  margin: 0.8em;\n  padding: 0;\n`;\nconst ListItems = styled.span`\n  padding-right: 5px;\n`;\nconst initialState = {\n  id: Date.now(),\n  name: \"\",\n  image_url: \"\",\n  title: \"\",\n  meal_type: \"\",\n  ingredients: \"\",\n  instructions: \"\",\n  chef_id: \"\"\n};\n\nconst AddRecipe = props => {\n  // const state = useContext(Context);\n  const _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        addRecipe = _useState2[0],\n        setAddRecipe = _useState2[1]; // these states are held seperately so they can be put into the arrays\n  // const [ingredients, setIngredients] = useState({\n  //   ingredients: \"\"\n  // });\n  // const [tags, setTags] = useState({\n  //   tags: \"\"\n  // });\n  //handles state changes for the newRecipe object\n\n\n  const handleChange = e => {\n    e.preventDefault();\n    setAddRecipe(_objectSpread({}, addRecipe, {\n      [e.target.name]: e.target.value\n    }));\n  }; //handles state changes for the ingredients and tags arrays before adding them to the newRecipe Object\n  // const handleIngredient = e => {\n  //   e.preventDefault();\n  //   setIngredients({\n  //     ...ingredients,\n  //     [e.target.name]: e.target.value\n  //   });\n  // };\n  // const handleTags = e => {\n  //   e.preventDefault();\n  //   setTags({ ...tags, [e.target.name]: e.target.value });\n  // };\n  //adds addRecipe to the reducer and will eventually make an api call\n\n\n  const onSubmit = e => {\n    const image_url = addRecipe.image_url,\n          title = addRecipe.title,\n          meal_type = addRecipe.meal_type,\n          ingredients = addRecipe.ingredients,\n          instructions = addRecipe.instructions;\n    e.preventDefault();\n\n    if (document.getElementById(\"meal_type\").value != \"\") {\n      // setAddRecipe({ id: Date.now() });\n      axiosAuth().post(`${addRecipe.id}/posts`, {\n        image_url,\n        title,\n        meal_type,\n        ingredients,\n        instructions\n      }).then(res => {\n        console.log(res.data);\n        setAddRecipe(res.data);\n      }).catch(err => console.log(\"sorry, can not add a new recipe\", err)); //   addRecipe.time = Date.now();\n      //   state.dispatch({\n      //     type: \"ADD\",\n      //     payload: [newRecipe]\n      //   });\n      //   setAddRecipe({\n      //     id: \"\",\n      //     recipe_name: \"\",\n      //     source: \"\",\n      //     // ingredients: [{ id: \"\", ingredient: \"\", quantity: \"\", unit: \"\" }],\n      //     categories: [],\n      //     ingredients: [],\n      //     recipe_instructions: \"\"\n      //   });\n    }\n  }; //adds ingredients to the addRecipe ingredients array\n  // const Ingredient = e => {\n  //   e.preventDefault();\n  //   e.stopPropagation();\n  //   if (ingredients.ingredients != \"\") {\n  //     setAddRecipe({\n  //       ...addrecipe,\n  //       ingredients: [...addrecipe.ingredients, ingredients.ingredients]\n  //     });\n  //     setIngredients({ ingredients: \"\" });\n  //     document.getElementById(\"ingredientinput\").value = \"\";\n  //   }\n  // };\n  //adds tags to the addRecipe categories array\n  // const Tag = e => {\n  //   if (tags.tags != \"\") {\n  //     e.preventDefault();\n  //     e.stopPropagation();\n  //     setAddRecipe({\n  //       ...addRecipe,\n  //       categories: [...newRecipe.categories, tags.tags]\n  //     });\n  //     setTags({ tags: \"\" });\n  //     document.getElementById(\"taginput\").value = \"\";\n  //   }\n  // };\n\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Add Recipe\"), React.createElement(InputBox, {\n    id: \"recipe_name\",\n    type: \"text\",\n    name: \"recipe_name\",\n    value: newRecipe.recipe_name,\n    placeholder: \"Title:\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(InputBox, {\n    type: \"text\",\n    name: \"source\",\n    value: newRecipe.source,\n    placeholder: \"Author:\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), addRecipe.ingredients.map((item, index) => React.createElement(ListItems, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, item, \",\")), React.createElement(IngredFormSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(InputBox, {\n    id: \"ingredientinput\",\n    type: \"text\",\n    name: \"ingredients\",\n    value: ingredients.ingredients,\n    placeholder: \"ingredient:\",\n    onChange: handleIngredient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(BtnClick, {\n    type: \"button\",\n    onClick: Ingredient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Add Ingredient!\")), React.createElement(InputArea, {\n    id: \"recipe_instructions\",\n    type: \"textarea\",\n    name: \"recipe_instructions\",\n    value: addRecipe.recipe_instructions,\n    placeholder: \"Instructions:\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), addRecipe.categories.map((item, index) => React.createElement(ListItems, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, item, \",\")), React.createElement(IngredFormSet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(InputBox, {\n    id: \"taginput\",\n    type: \"text\",\n    name: \"tags\",\n    value: tags.tags,\n    placeholder: \"Tag:\",\n    onChange: handleTags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(BtnClick, {\n    type: \"button\",\n    onClick: Tag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Add Tag!\")), React.createElement(\"button\", {\n    id: \"submitbutton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Add Recipe!\"));\n};\n\nexport default AddRecipe;","map":{"version":3,"sources":["/Users/chelseagilmore/Desktop/frontend/chef-portfolio/src/components/AddRecipe.js"],"names":["React","useState","useContext","axiosAuth","styled","Wrap","div","InputBox","input","InputArea","textarea","MainForm","form","IngredFormSet","fieldset","BtnClick","button","Space","p","ListItems","span","initialState","id","Date","now","name","image_url","title","meal_type","ingredients","instructions","chef_id","AddRecipe","props","addRecipe","setAddRecipe","handleChange","e","preventDefault","target","value","onSubmit","document","getElementById","post","then","res","console","log","data","catch","err","newRecipe","recipe_name","source","map","item","index","handleIngredient","Ingredient","recipe_instructions","categories","tags","handleTags","Tag"],"mappings":"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","sourcesContent":["// Add a form to add a new recipe\nimport React, { useState, useContext } from \"react\";\nimport { axiosAuth } from \"/utils/axiosWithAuth\";\nimport styled from \"styled-components\";\n// import { Context } from \"../utils\";\n\nconst Wrap = styled.div`\n  overflow: auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  background: #d85505;\n  padding: 5px;\n  border-radius: 15px;\n`;\n\nconst InputBox = styled.input`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n`;\nconst InputArea = styled.textarea`\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1.2;\n  border: 1px solid lightgrey;\n  border-radius: 3px;\n  padding: 0.5em;\n  margin: 0.5rem;\n  height: 80px;\n  width: 100%;\n`;\nconst MainForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 1em;\n  background: #f2e2ce;\n  border-radius: 3px;\n  background: #3f043c;\n  width: 250px;\n  height: 400px;\n  overflow: auto;\n  box-sizing: border-box;\n  border-radius: 15px;\n  margin-right: 50px;\n  margin-top: 50px;\n  span {\n    color: white;\n  }\n`;\nconst IngredFormSet = styled.fieldset`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  margin: 1em 0;\n`;\nconst BtnClick = styled.button`\n  width: 14em;\n  height: 3em;\n  margin: auto;\n  border: 1px solid #3f043c;\n  border-radius: 3px;\n  background: white;\n  color: #d85505;\n`;\nconst Space = styled.p`\n  margin: 0.8em;\n  padding: 0;\n`;\nconst ListItems = styled.span`\n  padding-right: 5px;\n`;\n\nconst initialState = {\n  id: Date.now(),\n  name: \"\",\n  image_url: \"\",\n  title: \"\",\n  meal_type: \"\",\n  ingredients: \"\",\n  instructions: \"\",\n  chef_id: \"\"\n}\n\nconst AddRecipe = props => {\n  // const state = useContext(Context);\n  const [addRecipe, setAddRecipe] = useState(initialState);\n  // these states are held seperately so they can be put into the arrays\n  // const [ingredients, setIngredients] = useState({\n  //   ingredients: \"\"\n  // });\n  // const [tags, setTags] = useState({\n  //   tags: \"\"\n  // });\n  //handles state changes for the newRecipe object\n  const handleChange = e => {\n    e.preventDefault();\n    setAddRecipe({ ...addRecipe, [e.target.name]: e.target.value });\n  };\n  //handles state changes for the ingredients and tags arrays before adding them to the newRecipe Object\n  // const handleIngredient = e => {\n  //   e.preventDefault();\n  //   setIngredients({\n  //     ...ingredients,\n  //     [e.target.name]: e.target.value\n  //   });\n  // };\n  // const handleTags = e => {\n  //   e.preventDefault();\n  //   setTags({ ...tags, [e.target.name]: e.target.value });\n  // };\n  //adds addRecipe to the reducer and will eventually make an api call\n  const onSubmit = e => {\n    const {image_url, title, meal_type, ingredients, instructions} = addRecipe\n    e.preventDefault();\n    if (document.getElementById(\"meal_type\").value != \"\") {\n      // setAddRecipe({ id: Date.now() });\n      axiosAuth()\n        .post(`${addRecipe.id}/posts`, {image_url, title, meal_type, ingredients, instructions})\n        .then(res => {\n          console.log(res.data)\n          setAddRecipe(res.data)\n        })\n        .catch(err => console.log(\"sorry, can not add a new recipe\", err))\n    //   addRecipe.time = Date.now();\n    //   state.dispatch({\n    //     type: \"ADD\",\n    //     payload: [newRecipe]\n    //   });\n    //   setAddRecipe({\n    //     id: \"\",\n    //     recipe_name: \"\",\n    //     source: \"\",\n    //     // ingredients: [{ id: \"\", ingredient: \"\", quantity: \"\", unit: \"\" }],\n    //     categories: [],\n    //     ingredients: [],\n    //     recipe_instructions: \"\"\n    //   });\n    }\n  };\n  //adds ingredients to the addRecipe ingredients array\n  // const Ingredient = e => {\n  //   e.preventDefault();\n  //   e.stopPropagation();\n  //   if (ingredients.ingredients != \"\") {\n  //     setAddRecipe({\n  //       ...addrecipe,\n  //       ingredients: [...addrecipe.ingredients, ingredients.ingredients]\n  //     });\n  //     setIngredients({ ingredients: \"\" });\n  //     document.getElementById(\"ingredientinput\").value = \"\";\n  //   }\n  // };\n  //adds tags to the addRecipe categories array\n  // const Tag = e => {\n  //   if (tags.tags != \"\") {\n  //     e.preventDefault();\n  //     e.stopPropagation();\n  //     setAddRecipe({\n  //       ...addRecipe,\n  //       categories: [...newRecipe.categories, tags.tags]\n  //     });\n  //     setTags({ tags: \"\" });\n  //     document.getElementById(\"taginput\").value = \"\";\n  //   }\n  // };\n\n  return (\n    <form>\n    <h3>Add Recipe</h3>\n      <InputBox\n        id=\"recipe_name\"\n        type=\"text\"\n        name=\"recipe_name\"\n        value={newRecipe.recipe_name}\n        placeholder=\"Title:\"\n        onChange={handleChange}\n        required\n      />\n      <InputBox\n        type=\"text\"\n        name=\"source\"\n        value={newRecipe.source}\n        placeholder=\"Author:\"\n        onChange={handleChange}\n\n      />\n      {addRecipe.ingredients.map((item, index) => (\n        <ListItems key={index}>{item},</ListItems>\n      ))}\n      <IngredFormSet>\n        <InputBox\n          id=\"ingredientinput\"\n          type=\"text\"\n          name=\"ingredients\"\n          value={ingredients.ingredients}\n          placeholder=\"ingredient:\"\n          onChange={handleIngredient}\n\n        />\n        <BtnClick type=\"button\" onClick={Ingredient}>\n          Add Ingredient!\n        </BtnClick>\n      </IngredFormSet>\n\n      <InputArea\n        id=\"recipe_instructions\"\n        type=\"textarea\"\n        name=\"recipe_instructions\"\n        value={addRecipe.recipe_instructions}\n        placeholder=\"Instructions:\"\n        onChange={handleChange}\n      />\n      {addRecipe.categories.map((item, index) => (\n        <ListItems key={index}>{item},</ListItems>\n      ))}\n      <IngredFormSet>\n        <InputBox\n          id=\"taginput\"\n          type=\"text\"\n          name=\"tags\"\n          value={tags.tags}\n          placeholder=\"Tag:\"\n          onChange={handleTags}\n        />\n        <BtnClick type=\"button\" onClick={Tag}>\n          Add Tag!\n        </BtnClick>\n      </IngredFormSet>\n\n      <button id=\"submitbutton\">Add Recipe!</button>\n    </form>\n  );\n};\n\nexport default AddRecipe;"]},"metadata":{},"sourceType":"module"}